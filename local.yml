version: '3'

services:
  django:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"

  celery_beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      django:
        condition: service_started
    command: celery --app=config beat

  celery_worker:
      build:
        context: .
        dockerfile: ./Dockerfile
      env_file:
        - .env
      depends_on:
        db:
          condition: service_healthy
        redis:
          condition: service_healthy
        django:
          condition: service_started
        celery_beat:
          condition: service_started
      command: celery --app=config worker

  db:
    image: postgres:14
    environment:
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=cqs
      - PGUSER=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.2-alpine
    container_name: cqs_redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - ./data/cache:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
